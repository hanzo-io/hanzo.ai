{"version":3,"file":"sake","sources":["../src/transform.coffee","../src/cache.coffee","../src/load.coffee","../src/utils.coffee","../src/run.coffee","../src/cli.coffee"],"sourcesContent":["export default transform = (code) ->\n  babel     = require 'babel-core'\n  esModules = require 'babel-plugin-transform-es2015-modules-commonjs'\n\n  out = babel.transform code,\n    plugins: [\n      [esModules, loose: true]\n    ]\n  out.code\n","import fs   from  'fs'\nimport path from  'path'\n\nimport transform from './transform'\n\n\n# Path to cache directory\ncacheDir  = (dir) ->\n  path.resolve path.join dir, '.sake'\n\n\n# Path to cache file\ncachePath = (dir) ->\n  path.join (cacheDir dir), 'Sakefile.js'\n\n\n# Safely make directory\nmkdirp = (dir) ->\n  try\n    fs.mkdirSync dir\n  catch err\n    throw err unless err.code == 'EEXIST'\n\n# Read cache file\nread = (dir) ->\n  fs.readFileSync (cachePath dir), 'utf8'\n\n\n# Write cache file\nwrite = (dir, code) ->\n  mkdirp cacheDir dir\n  transformed = transform code\n  fs.writeFileSync (cachePath dir), transformed, 'utf8'\n\n\n# Require cached Sakefile such that require and other Node machinery work\nrequireCached = (dir) ->\n  # Symlink cached Sakefile back into Sakefile dir\n  tempFile  = path.resolve path.join dir, \"__Sakefile.js\"\n  fs.linkSync (cachePath dir), tempFile\n\n  try\n    require tempFile     # Require cached Sakefile\n  catch err\n\n  fs.unlinkSync tempFile # Ensure link is cleaned up\n  throw err if err?      # Throw if failed to require Sakefile\n\n\n# Load cached Sakefile unless it's not newer than source\nload = (dir, file) ->\n  try\n    cached = fs.statSync cachePath dir\n    source = fs.statSync path.join dir, file\n  catch err\n    return false if err.code == 'ENOENT'\n    throw err\n\n  if cached.mtime > source.mtime\n    requireCached dir\n    true\n  else\n    false\n\n\nexport default cache =\n  load:    load\n  require: requireCached\n  write:   write\n","import fs   from 'fs'\nimport path from 'path'\n\nimport findCoffee from 'find-coffee'\nimport cache from './cache'\n\n# Load Cakefile\nloadCakefile = (dir, file) ->\n  # Try to load from cache\n  return if cache.load dir, file\n\n  # Find local copy of CoffeeScript\n  coffee = findCoffee()\n\n  # Register .coffee extension\n  coffee.register()\n\n  # Compile Cakefile\n  code = fs.readFileSync file, 'utf8'\n  js   = coffee.compile code,\n    bare:      true\n    filename:  file\n    sourceMap: false\n\n  # Write to cache and try to load\n  cache.write dir, js\n  cache.require dir\n\n# Load Sakefile\nloadSakefile = (dir, file) ->\n  # Try to load from cache\n  return if cache.load dir, file\n\n  try\n    code = fs.readFileSync file, 'utf8'\n    cache.write dir, code\n    cache.require dir\n  catch err\n    throw err unless (path.extname file)  == ''\n    throw err unless err.constructor.name == 'SyntaxError'\n    loadCakefile dir, file\n\n\n# Load Sakefile.ts\nloadSakefileTs = (dir, file) ->\n  # Try to load from cache\n  return if cache.load dir, file\n\n  # Write straight to cache\n  exec.sync \"tsc --types sake-core --outFile .sake/Sakefile.js Sakefile.ts\"\n\n  # Load from cache\n  cache.require dir\n\nexport default load =\n  Cakefile:   loadCakefile\n  Sakefile:   loadSakefile\n  SakefileTs: loadSakefileTs\n","import path from 'path'\nimport fs   from 'fs'\n\nimport {tasks} from 'sake-core'\n\n# Ensure local node_modules bin is on the front of $PATH\nexport preferLocalModules = ->\n  binPath = path.join process.cwd(), 'node_modules/', '.bin'\n  process.env.PATH = ([binPath].concat process.env.PATH.split ':').join ':'\n\n# When `sake` is invoked, search in the current and all parent directories\n# to find the relevant Sakefile (or Cakefile).\nexport findSakefile = (dir) ->\n  for file in ['Sakefile', 'Sakefile.js', 'Cakefile', 'Sakefile.ts']\n    return file: file, dir: dir if fs.existsSync path.join dir, file\n\n  # Recurse up the directory structure\n  parent = path.normalize path.join dir, '..'\n  return findSakefile parent unless parent is dir\n\n  # We're at the top, bail\n  throw new Error \"Sakefile not found in #{process.cwd()}\"\n\n# Display the list of Cake tasks in a format similar to `rake -T`\nexport printTasks = (dir, file) ->\n  relative = path.relative or path.resolve\n  filePath = path.join relative(__originalDirname, process.cwd()), file\n\n  console.log \"#{filePath} defines the following tasks:\\n\"\n\n  delete tasks.has\n\n  names = Object.keys(tasks).sort()\n\n  for name in names\n    task   = tasks[name]\n    spaces = 20 - name.length\n    spaces = if spaces > 0 then Array(spaces + 1).join(' ') else ''\n    desc   = if task.description then \"# #{task.description}\" else ''\n    console.log \"sake #{name}#{spaces} #{desc}\"\n\n  # console.log oparse.help() if switches.length\n\n# Print an error and exit when attempting to use an invalid task/option.\nexport fatalError = (message) ->\n  console.error message + '\\n'\n  console.log 'To see a list of all tasks/options, run \"sake\"'\n  process.exit 1\n\nexport missingTask = (task) -> fatalError \"No such task: #{task}\"\n","import fs    from 'fs'\nimport sake  from 'sake-core'\nimport yargs from 'yargs'\n\nimport cache from './cache'\nimport load  from './load'\nimport {findSakefile, missingTask, printTasks} from './utils'\nimport {version} from '../package.json'\n\n\n# Run `sake`. Executes all of the tasks you pass, in order.  If no tasks are\n# passed, print the help screen. Keep a reference to the original directory\n# name, when running Cake tasks from subdirectories.\nexport default run = ->\n  # Save record of original directory\n  global.__originalDirname = fs.realpathSync '.'\n\n  # Search for sakefile\n  {dir, file} = findSakefile __originalDirname\n\n  # Change dir to match Sakefile location\n  process.chdir dir\n\n  # Process arguments\n  argv  = yargs.argv\n  tasks = argv._.slice 0  # Create a copy of tasks to execute\n  argv.arguments = argv._ # For backwards compatibility with cake\n\n  if argv.debug\n    process.env.VERBOSE = true\n\n  # Print Sake version\n  if argv.version or argv.v and not argv._.length\n    console.log \"#{version} (core: #{sake.version})\"\n    process.exit 0\n\n  # Install Sake globals\n  sake.install()\n\n  # Load Sakefile\n  unless cache.load dir, file\n    switch file\n      when 'Cakefile'\n        load.Cakefile dir, file\n      when 'Sakefile', 'Sakefile.js'\n        load.Sakefile dir, file\n      when 'Sakefile.ts'\n        load.SakefileTs dir, file\n\n  # Bail if no tasks specified\n  return printTasks dir, file unless argv._.length\n\n  # Bail if missing task\n  for task in tasks\n    unless sake.tasks[task]?\n      missingTask task\n\n  # Let's drink\n  sake.invoke tasks, argv, (err) ->\n    if err?\n      console.error err\n      process.exit 1\n","import run from './run'; run()\n"],"names":["transform","load","cache","tasks","sake","run"],"mappings":"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"}