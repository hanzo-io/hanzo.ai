{"version":3,"file":"handroll.js","sources":["../src/colors.coffee","../src/log.coffee","../node_modules/es-object-assign/src/index.coffee","../src/utils.coffee","../src/external.coffee","../src/formats.coffee","../node_modules/rollup-plugin-executable/src/index.js","../src/plugins/annotate.coffee","../src/plugins/builtins.coffee","../src/plugins/filesize.coffee","../src/plugins/globals.coffee","../src/plugins/minify.coffee","../src/plugins/shebang.coffee","../node_modules/rollup-plugin-coffee2/src/format-error.coffee","../node_modules/rollup-plugin-coffee2/src/index.coffee","../src/compilers.coffee","../src/plugins.coffee","../src/generate.coffee","../src/write.coffee","../src/bundle.coffee","../src/handroll.coffee","../src/index.coffee"],"sourcesContent":["import chalk from 'chalk'\n\ngray       = (s) -> chalk.gray s\ngray.bold  = (s) -> chalk.gray.bold s\nwhite      = (s) -> chalk.white s\nwhite.bold = (s) -> chalk.white.bold s\nwhite.dim  = (s) -> chalk.white.dim s\n\nexport {gray, white}\n","import {gray, white} from './colors'\n\nverbose = true\n\nlog = ->\n  if verbose\n    console.log.apply console, arguments\n\nlog.warn = ->\n  if verbose\n    console.log.apply console, arguments\n\nlog.error = ->\n  console.error.apply console, arguments\n\nlog.verbose = (bool) ->\n  verbose = bool\n\nlog.gray = (message) ->\n  log gray message\n\nlog.white = (message) ->\n  log white message\n\nlog.white.bold = (message) ->\n  log white.bold message\n\nlog.white.dim = (message) ->\n  log white.dim message\n\nexport default log\n","getOwnSymbols = Object.getOwnPropertySymbols\n\ntoObject = (val) ->\n  if val == null or val == undefined\n    throw new TypeError('Object.assign cannot be called with null or undefined')\n  Object val\n\nshouldUseNative = ->\n  try\n    return false unless Object.assign\n\n    # Detect buggy property enumeration order in older V8 versions.\n\n    # https://bugs.chromium.org/p/v8/issues/detail?id=4118\n    test1 = new String('abc')\n    test1[5] = 'de'\n    return false if Object.getOwnPropertyNames(test1)[0] == '5'\n\n    # https://bugs.chromium.org/p/v8/issues/detail?id=3056\n    test2 = {}\n    for i in [0..9]\n      test2['_' + String.fromCharCode(i)] = i\n    order2 = Object.getOwnPropertyNames(test2).map (n) -> test2[n]\n    return false if order2.join('') != '0123456789'\n\n    # https://bugs.chromium.org/p/v8/issues/detail?id=3056\n    test3 = {}\n    for letter in 'abcdefghijklmnopqrst'.split('')\n      test3[letter] = letter\n    if Object.keys(Object.assign({}, test3)).join('') != 'abcdefghijklmnopqrst'\n      return false\n    true\n  catch err\n    # We don't expect any of the above to throw, but better to be safe.\n    false\n\nexport default objectAssign = do ->\n  return Object.assign if shouldUseNative()\n\n  (target, sources...) ->\n    to = toObject target\n\n    for source in sources\n      from = Object(source)\n      for key of from\n        if Object::hasOwnProperty.call(from, key)\n          to[key] = from[key]\n      if getOwnSymbols\n        for symbol in getOwnSymbols(from)\n          if Object::propIsEnumerable.call from, symbol\n            to[symbol] = from[symbol]\n    to\n","import log       from './log'\nimport {version} from '../package.json'\n\n# Create a merged copy of a set of objects\nexport merge = (fn) ->\n  (opts) ->\n    opts = (Object.assign {}, @opts, opts)\n    log.verbose !opts.quiet if opts.quiet?\n    fn.call @, opts\n\n# Try to guess moduleName (used in export for browser bundles)\nexport moduleName = (name) ->\n  return '' unless name.trim()\n  first = name.charAt(0).toUpperCase()\n  name  = name.replace /\\.js$|\\.coffee$|-js$/, ''\n  name  = name.replace /-([a-z])/g, (g) -> g[1].toUpperCase()\n  first + name.slice 1\n\nexport isPlugin = do ->\n  keys = new Set [\n    'name'\n    'options'\n    'load'\n    'resolveId'\n    'transform'\n    'transformBundle'\n    'ongenerate'\n    'onwrite'\n    'intro'\n    'outro'\n    'banner'\n    'footer'\n  ]\n\n  (obj) ->\n    for own k of obj\n      if keys.has k\n        return true\n    false\n\nexport banner = ->\n  unless banner.seen?\n    log.white.dim \"handroll v#{version} 🍣\"\n    banner.seen = true\n\nexport isArray  = (v) -> Array.isArray v\nexport isString = (v) -> typeof v == 'string' or v instanceof String\n","import log       from './log'\nimport {isArray} from './utils'\n\n# Get external packages from package.json\nexport getDeps = (pkg, dev = false) ->\n  deps     = Object.keys pkg.dependencies     ? {}\n  devDeps  = Object.keys pkg.devDependencies  ? {}\n  peerDeps = Object.keys pkg.peerDependencies ? {}\n\n  # Should always include peer dependencies, these are not even part of the\n  # package being bundled.\n  deps = deps.concat peerDeps\n\n  if dev\n    deps.concat devDeps\n  else\n    deps\n\n# Convert external opt into detected externals based on option selected\ndetectExternal = (external, pkg) ->\n  if external == true or !external?\n    external = getDeps pkg\n  if external == 'dev'\n    external = getDeps pkg, true\n  if external == false\n    external = []\n  external\n\n# Remove included deps from detected externals\nremoveIncluded = (externals, include = []) ->\n  removed = []\n  for dep in include\n    if ~(idx = externals.indexOf dep)\n      externals.splice idx, 1\n      removed.push dep\n  removed\n\n# Log detected external deps\nlogExternals = (externals) ->\n  if externals.length\n    log 'external:'\n    for dep in externals\n      log \" - #{dep}\"\n  else\n    log 'no externals'\n  return\n\n# Log detected external deps\nlogIncluded = (included) ->\n  if included.length\n    log 'included:'\n    for dep in included\n      log \" + #{dep}\"\n  return\n\n# autoExternal uses your package.json to guess which dependencies should be\n# considered external. By default only dependencies in pkg.dependencies will be\n# considered external as pkg.devDependencies are generally only required as\n# part of a build or development process. If this isn't what you want you\n# should manually specify external dependencies instead.\nexport autoExternal = ({external, include, pkg}) ->\n  return external if isArray external\n\n  externals = detectExternal external,  pkg\n  included  = removeIncluded externals, include\n\n  logExternals externals\n  logIncluded  included\n\n  externals\n","import fs   from 'fs'\nimport path from 'path'\n\nimport {isString, moduleName} from './utils'\n\n# autoFormat tries to guess the formats required for an operation based on your\n# package.json file. If opts.format is specified, multiple formats will not be\n# considered.\nexport autoFormats = ({format, formats, pkg}) ->\n  if format?\n    [format]\n  else if formats?\n    formats\n  else\n    formats = []\n    if pkg.browser?\n      formats.push 'web'\n    if pkg.main?\n      formats.push 'cjs'\n    if pkg.module?\n      formats.push 'es'\n    formats\n\n# Detect formats requested\nexport detectFormats = (opts) ->\n  # opts.format overrides opts.formats\n  if opts.format?\n    [opts.format]\n  else if opts.formats?\n    opts.formats\n  else\n    autoFormats opts\n\n# Convert our formats to Rollup settings\nexport formatOpts = (opts) ->\n  # Default to es module\n  opts.format ?= 'es'\n\n  switch opts.format\n    when 'app'\n      app opts\n    when 'cli', 'bin', 'binary', 'executable'\n      cli opts\n    when 'cjs', 'commonjs', 'node'\n      cjs opts\n    when 'es',  'module'\n      es opts\n    when 'umd'\n      umd opts\n    when 'web', 'iife'\n      web opts\n    else\n      throw new Error 'Unsupported export format'\n\n# Various pre-configurations we support\nexport app = (opts) ->\n  dest = opts.dest ? opts.pkg?.app ? opts.pkg?.main\n\n  stat = fs.statSync dest\n\n  if stat.isDirectory()\n    dest = path.join dest, 'app.js'\n\n  dest:      dest\n  format:    'iife'\n  sourceMap: opts.sourceMap\n\nexport es = (opts) ->\n  dest = opts.dest ? opts.pkg?.module ? opts.pkg?['js:next'] ? null\n\n  dest:      dest\n  format:    'es'\n  sourceMap: opts.sourceMap\n\nexport cjs = (opts) ->\n  dest = opts.dest ? opts.pkg?.main ? null\n\n  dest:       dest\n  format:     'cjs'\n  sourceMap:  opts.sourceMap\n\nexport cli = (opts) ->\n  dest = opts.dest ? opts.pkg?.bin ? path.join 'bin/', (moduleName opts.pkg?.name).toLowerCase()\n\n  # Sometimes bin is an object, use the first mapping here\n  unless isString dest\n    dest = dest[(Object.keys dest)[0]]\n\n  dest:       dest\n  executable: true\n  format:     'cjs'\n  sourceMap:  opts.sourceMap\n\nexport web = (opts) ->\n  name = opts.moduleName ? moduleName opts.pkg?.name\n  dest = opts.dest       ? \"#{name}.js\".toLowerCase()\n\n  dest:       dest\n  browser:    opts.browser != false\n  external:   false\n  format:     'iife'\n  moduleName: name\n  sourceMap:  opts.sourceMap\n\nexport umd = (opts) ->\n  dest:       opts.dest\n  format:     'umd'\n  sourceMap:  opts.sourceMap\n","// eslint-disable-next-line filenames/match-exported\nimport fs from \"fs\"\n\n// Set EXECUTABLE bit on file mode\nconst EXECUTABLE_MODE = 0o111\n\nexport default function executable(options = {})\n{\n  return {\n    name: \"rollup-plugin-executable\",\n\n    onwrite: ({ dest }) =>\n    {\n      const { mode } = fs.statSync(dest)\n\n      // eslint-disable-next-line no-bitwise\n      const newMode = mode | EXECUTABLE_MODE\n\n      fs.chmodSync(dest, newMode)\n    }\n  }\n}\n","import path  from 'path'\nimport magic from 'magic-string'\n\n\nexport default (opts = {}) ->\n  name: 'annotate'\n  transform: (source, id) ->\n    filename = path.relative process.cwd(), id\n    ms = (new magic source).prepend \"// #{filename}\\n\"\n    result =\n      code: ms.toString()\n\n    if opts.sourceMap\n      result.map = ms.generateMap hires: true\n    result\n","import builtins from 'rollup-plugin-node-builtins'\n\nexport default (opts = {}) ->\n  plugin = builtins opts\n  plugin.name = 'node-builtins'\n  plugin\n","import chalk    from 'chalk'\nimport fileSize from 'filesize'\nimport gzip     from 'gzip-size'\n\n\nrender = (filename, size, gzipSize) ->\n  gb = chalk.green.bold\n  wb = chalk.white.bold\n  \" ⇢ #{wb filename}\\t#{gb size} (#{gb gzipSize} compressed)\"\n\nexport default (opts = {}) ->\n  opts.format ?= {}\n\n  name: 'filesize'\n  ongenerate: (bundle, result) ->\n    size = fileSize Buffer.byteLength result.code, opts.format\n    gzipSize = fileSize gzip.sync(result.code), opts.format\n    console.log render bundle.dest, size, gzipSize\n","import globals from 'rollup-plugin-node-globals'\n\nexport default (opts = {}) ->\n  plugin = globals opts\n  plugin.name = 'node-globals'\n  plugin\n","export default (opts = {}) ->\n  { minify } = require 'uglify-es'\n\n  console.log opts\n\n  name: 'minify'\n  transformBundle: (code, plugins, sourceMapChain, options) ->\n    result = minify code,\n      compress:    opts.compress   ? {}\n      ie8:         opts.ie8        ? false\n      keep_fnames: opts.keepFnames ? opts.keep_fnames ? false\n      mangle:      opts.mangle     ? {}\n      output:      opts.output     ? {}\n      parse:       opts.parse      ? {}\n      sourceMap:   opts.sourceMap  ? false\n      toplevel:    opts.toplevel   ? false\n      warnings:    opts.warnings   ? false\n      wrap:        opts.wrap       ? false\n\n    result\n","export default (opts = {}) ->\n  name:   'shebang'\n  banner: '#!/usr/bin/env node'\n","export default (source, filename, err) ->\n  {first_line, last_line, first_column, last_column} = err.location\n\n  # last_line no longer exists randomly\n  unless last_line?\n    last_line = first_line\n\n  # get lines from source\n  lines = source.split '\\n'\n\n  # insert start of highlighting\n  l = lines[first_line]\n  lines[first_line] = (l.substring 0, first_column) + '\\x1B[91m' + l.substring first_column\n\n  # insert end\n\n  l = lines[last_line]\n\n  if first_line == last_line\n    # error only spans one line and overlaps with current cursor\n    # skip a bit farther due to insertion of highlighting\n    col = last_column + 6\n  else\n    col = last_column\n\n  # end highlighting\n  lines[last_line] = (l.substring 0, col) + '\\x1B[39m' + (l.substring col)\n\n  # get subset of lines with error to display\n  lines = lines.slice first_line, last_line + 1\n\n  # underline with carets\n  carets = Array(first_column+1).join(' ')  + \"\\x1B[91m#{Array(last_column + 2 - first_column).join('^')}\\x1B[39m\"\n\n  lines.push carets\n\n  \"\"\"\n   #{filename}:#{first_line+1}:#{first_column+1}: #{err.name}: #{err.message}\n   #{lines.join '\\n'}\\n\n   \"\"\"\n","import formatError from './format-error'\nimport {extname}   from 'path'\n\n\nversion = (coffee) ->\n  parseInt (coffee.VERSION.split '.')[0], 10\n\n# Find specific version of CoffeeScript\nfindCoffee = (wanted) ->\n  for pkg in ['coffeescript', 'coffee-script']\n    try\n      coffee = require pkg\n      return coffee if (version coffee) == wanted\n    catch err\n  throw new Error 'Unable to find CoffeeScript matching version ' + wanted\n\n# Find either CoffeeScript version, preferring 2.0\nfindEither = ->\n  try\n    coffee = findCoffee 2\n  catch err\n    coffee = findCoffee 1\n\nsourceMap = (out) ->\n  if out.v3SourceMap\n    JSON.parse out.v3SourceMap\n  else\n    null\n\nexport default (opts = {}) ->\n  opts.sourceMap  ?= true\n  opts.bare       ?= true\n  opts.extensions ?= ['.coffee', '.litcoffee']\n\n  if opts.version?\n    coffee = findCoffee opts.version\n  else\n    coffee = findEither()\n\n  name: 'coffee2'\n  transform: (code, id) ->\n    if opts.extensions.indexOf(extname id) == -1\n      return null\n\n    try\n      out = coffee.compile code,\n        filename:  id\n        bare:      opts.bare\n        sourceMap: opts.sourceMap\n    catch err\n      if err.location?\n        err.formattedMessage = formatError code, id, err\n      throw err\n\n    code: out.js\n    map:  sourceMap out\n","# import buble  from 'rollup-plugin-buble'\nimport coffee2      from 'rollup-plugin-coffee2'\nimport typescript   from 'rollup-plugin-typescript'\nimport json         from 'rollup-plugin-json'\nimport pug          from 'rollup-plugin-pug'\nimport string       from 'rollup-plugin-string'\nimport stylup       from 'rollup-plugin-stylup'\n\nimport autoprefixer from 'autoprefixer'\nimport cssnano      from 'cssnano'\nimport lost         from 'lost'\nimport lostStylus   from 'lost-stylus'\nimport postcss      from 'poststylus'\nimport rupture      from 'rupture'\n\nimport log        from './log'\nimport {isPlugin} from './utils'\n\nexport default (opts) ->\n  postPlugins = [\n    lost()\n    autoprefixer browsers: '> 1%'\n  ]\n\n  if opts.minify\n    postPlugins.push cssnano()\n\n  coffeeOpts        = Object.assign {}, opts.compilers?.coffee\n  typescriptOpts    = Object.assign {}, opts.compilers?.typescript\n  jsonOpts          = Object.assign {}, opts.compilers?.json\n  pugOpts           = Object.assign {},\n      compileDebug:           false\n      inlineRuntimeFunctions: false\n      pretty:                 if opts.minify then false else true\n      sourceMap:              opts.sourceMap\n      staticPattern:          /\\S/\n  , opts.compilers?.pug\n\n  stylusOpts = Object.assign {},\n    sourceMap: opts.sourceMap\n    plugins: [\n      lostStylus()\n      rupture()\n      postcss postPlugins\n    ], opts.compilers?.stylus\n\n\n  # Default compilers\n  compilers =\n    # js:     buble   jsOpts\n\n    # Simple string compilers for .css and .html\n    coffee:     coffee2    coffeeOpts\n    css:        string     include: '**/*.css'\n    html:       string     include: '**/*.html'\n    json:       json       jsonOpts\n    pug:        pug        pugOpts\n    stylus:     stylup     stylusOpts\n    typescript: typescript typescriptOpts\n\n  compilers.css.name        = 'string-css'\n  compilers.html.name       = 'string-html'\n  compilers.typescript.name = 'typescript'\n\n  # If passed a legitimate plugin, allow it to override default\n  for k, v of opts.compilers\n    compilers[k] = v if isPlugin v\n\n  compilers\n","import path from 'path'\n\nimport commonjs     from 'rollup-plugin-commonjs'\nimport es3          from 'rollup-plugin-es3'\nimport executable   from 'rollup-plugin-executable'\nimport inject       from 'rollup-plugin-inject'\nimport legacy       from 'rollup-plugin-legacy'\nimport nodeResolve  from 'rollup-plugin-node-resolve-magic'\nimport sizes        from 'rollup-plugin-sizes'\nimport sourcemaps   from 'rollup-plugin-sourcemaps'\n\nimport annotate    from './plugins/annotate'\nimport builtins    from './plugins/builtins'\nimport filesize    from './plugins/filesize'\nimport globals     from './plugins/globals'\nimport minify      from './plugins/minify'\nimport shebang     from './plugins/shebang'\n\nimport autoCompilers from './compilers'\nimport log           from './log'\n\n\nresolveId = (id, opts = {}) ->\n  if opts.browser\n    nodeResolve.browser.sync id, basedir: opts.basedir\n  else\n    nodeResolve.node.sync id, basedir: opts.basedir\n\n\nexport autoPlugins = (opts) ->\n  # Start with source map support\n  plugins = [sourcemaps()]\n\n  # Detect compiler plugins or used passed plugins\n  if opts.plugins?\n    plugins = plugins.concat opts.plugins\n  else\n    for k,v of autoCompilers opts\n      plugins.push v\n\n  # Load up any extra plugins specified\n  plugins = plugins.concat (opts.use ? [])\n\n  # Add extra info above each module in bunlde\n  plugins.push annotate sourceMap: opts.sourceMap\n\n  # Enable legacy\n  if opts.legacy?\n    for k,v of opts.legacy\n      try\n        # Attempt to automatically resolve path to legacy files\n        opts.legacy[resolveId k, opts] = v\n      catch err\n    plugins.push legacy opts.legacy\n\n  # Enable node modules in browser\n  if opts.browser or opts.node\n    plugins.push globals()\n    plugins.push builtins()\n\n  # Automatically resolve node modules\n  plugins.push nodeResolve\n    basedir:        opts.basedir\n    browser:        opts.browser\n    extensions:     opts.extensions\n    preferBuiltins: opts.preferBuiltins\n    external:       opts.autoExternal ? true\n    skip:           opts.skip         ? opts.external\n\n  # Slightly more ES3 compatible output\n  if opts.browser or opts.es3\n    unless opts.es3 == false\n      plugins.push es3()\n\n  # Enable CommonJS\n  if opts.commonjs\n    plugins.push commonjs Object.assign\n      extensions: opts.extensions\n      sourceMap:  opts.sourceMap\n    , opts.commonjs\n\n  # Inject imports\n  if opts.inject?\n    plugins.push inject opts.inject\n\n  # Automatically make bundle executable\n  if opts.executable\n    plugins.push shebang()\n    plugins.push executable()\n\n  # Strip any debugging logic\n  if opts.strip\n    plugins.push strip\n      debugger:  true\n      functions: ['console.log', 'assert.*', 'debug', 'alert']\n      sourceMap: opts.sourceMap\n\n  if opts.minify? and not opts.minify == false\n    plugins.push minify Object.assign {}, (sourceMap: opts.sourceMap), opts.minify\n\n  # Extra logging + details\n  unless opts.quiet\n    plugins.push filesize()\n    if opts.details\n      plugins.push sizes details: true\n\n  log 'plugins:'\n  for plugin in plugins\n    name = (plugin.name ? '').replace /rollup-plugin-/, ''\n    log \" + #{name}\"\n\n  plugins\n","import {formatOpts} from './formats'\n\nexport generate = (bundle, opts) ->\n  bundle.generate formatOpts opts\n","import fs   from 'fs'\nimport path from 'path'\nimport {detectFormats, formatOpts} from './formats'\n\n# Helper to write bundle\nexport write = (bundle, opts) ->\n  switch opts.format\n    when 'app'\n      bundle.write writeApp opts\n    else\n      bundle.write formatOpts opts\n\n# Helper to write multiple formats\nexport writeAll = (bundle, opts) ->\n  ps = []\n\n  for fmt in detectFormats opts\n    ps.push write bundle, Object.assign {}, opts, format: fmt\n\n  Promise.all ps\n\nexport writeApp = (opts) ->\n  opts = formatOpts opts\n  fs.writeFileSync (path.join opts.basedir, 'index.html'), \"\"\"\n    <!DOCTYPE html>\n    <html lang=\"en\">\n      <body>\n        <script src=\"#{opts.dest}\"></script>\n      </body>\n    </html>\n    \"\"\"\n  opts\n","import path     from 'path'\nimport {rollup} from 'rollup'\n\nimport log from './log'\nimport {autoExternal}            from './external'\nimport {autoFormats, formatOpts} from './formats'\nimport {autoPlugins}             from './plugins'\nimport {banner, merge}           from './utils'\nimport {generate}                from './generate'\nimport {write, writeAll}         from './write'\n\ncached = null\n\nreadPkg = ->\n  try\n    require path.join process.cwd(), 'package.json'\n  catch err\n    {}\n\nclass Bundle\n  constructor: (opts = {}) ->\n    return new Bundle opts unless @ instanceof Bundle\n\n    opts.pkg ?= readPkg()\n\n    opts.acorn      ?= allowReserved: true\n    opts.browser    ?= false\n    opts.compilers  ?= null\n    opts.es3        ?= false\n    opts.executable ?= false\n    opts.extensions ?= ['.js', '.coffee', '.pug', '.styl']\n    opts.sourceMap  ?= true\n\n    opts.external   ?= null\n    opts.include    ?= []\n    opts.inject     ?= null\n    opts.plugins    ?= null\n    opts.use        ?= []\n\n    log.verbose not (opts.quiet ? false)\n\n    @opts = opts\n\n  cache: ({cache, invalidate}) ->\n    return null if cache == false\n\n    cache ?= cached\n\n    if invalidate?\n      for id in invalidate\n        log \"removing #{id} from module cache\"\n        delete cache[id]\n\n    cache\n\n  rollup: merge (opts) ->\n    unless opts.entry? and opts.entry != ''\n      throw new Error 'No entry module specified'\n\n    banner()\n\n    if @bundle?\n      log 'using cached bundle'\n      return Promise.resolve @bundle\n\n    opts.autoExternal = opts.autoExternal ? opts.external == true\n    opts.basedir      = opts.basedir      ? path.dirname opts.entry\n\n    # Detect format and update opts accordingly\n    opts.formats = autoFormats opts\n    if opts.formats.length == 1\n      opts.format = opts.formats[0]\n\n    # Set a few overrides if a single format is selected\n    if opts.format?\n      for k, v of (formatOpts opts)\n        opts[k] = v\n\n    opts.external = autoExternal opts\n    opts.plugins  = autoPlugins opts\n\n    new Promise (resolve, reject) =>\n      rollup\n        entry:     opts.entry\n        cache:     @cache opts\n        acorn:     opts.acorn\n        external:  opts.external\n        plugins:   opts.plugins\n        sourceMap: opts.sourceMap\n        onwarn:    (warning) ->\n          return if warning.code == 'UNRESOLVED_IMPORT'\n          return opts.onwarn warning if opts.onwarn?\n          log.warn warning.message\n\n      .then (bundle) =>\n        @bundle = bundle if opts.cacheBundle\n        resolve bundle\n        log.white.bold opts.entry\n\n      .catch (err) =>\n        if err.loc?.file?\n          log \"\\nFailed to parse '#{err.loc.file}'\"\n          log \"\\n#{err.frame}\\n\" if err.frame?\n        else if err.plugin? and err.id?\n          log \"\\nPlugin '#{err.plugin}' failed on module #{err.id}\"\n          log err.stack\n        else if err.id?\n          log \"\\nFailed to parse module #{err.id}\"\n          log err.stack\n        else\n          log err.stack\n        reject err\n\n  generate: merge (opts) ->\n    new Promise (resolve, reject) =>\n      @rollup opts\n        .then (bundle) ->\n          resolve generate bundle, opts\n        .catch reject\n\n  write: merge (opts) ->\n    new Promise (resolve, reject) =>\n      @rollup opts\n        .then (bundle) ->\n          if opts.format?\n            resolve write bundle, opts\n          else\n            resolve writeAll bundle, opts\n        .catch reject\n\nexport default Bundle\n","import path from 'path'\n\nimport Bundle from './bundle'\nimport log from './log'\nimport {isArray, merge} from './utils'\n\n\nsourceMapOverride = ->\n return false if process.env.DISABLE_SOURCEMAP\n return false if process.env.NO_SOURCEMAP\n return true  if process.env.SOURCEMAP\n null\n\n\nclass Handroll\n  constructor: (opts = {}) ->\n    return new Handroll opts unless @ instanceof Handroll\n\n    opts.sourceMap ?= sourceMapOverride() ? true\n    log.verbose not (opts.quiet ? false)\n    @opts = opts\n\n  use: (plugin) ->\n    if isArray plugin\n      plugins = plugin\n    else\n      plugins = [plugin]\n\n    for plugin in plugins\n      @opts.use.push plugin\n    @\n\n  bundle: merge (opts) ->\n    bundle = new Bundle opts\n    new Promise (resolve, reject) ->\n      (bundle.rollup cacheBundle: true)\n        .then -> resolve bundle\n\n  generate: merge (opts) ->\n    (new Bundle opts).generate()\n\n  write: merge (opts) ->\n    (new Bundle opts).write()\n\n\nexport default Handroll\n","import Bundle   from './bundle'\nimport Handroll from './handroll'\nimport log      from './log'\nimport pkg      from '../package.json'\n\nhandroll = new Handroll()\nhandroll.Bundle   = Bundle\nhandroll.Handroll = Handroll\nhandroll.verbose  = log.verbose\nhandroll.version  = pkg.version\n\nexport default handroll\n"],"names":["Object.assign","log","name","path","EXECUTABLE_MODE","executable","dest","fs","statSync","mode","chmodSync","version","extname","coffee2","globals","builtins","rollup","Bundle","Handroll"],"mappings":"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"}